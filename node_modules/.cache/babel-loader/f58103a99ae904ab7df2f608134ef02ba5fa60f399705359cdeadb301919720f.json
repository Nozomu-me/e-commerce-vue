{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from 'vuex';\nimport InputField from '../components/InputField.vue';\nexport default {\n  created: function created() {\n    if (localStorage.getItem('email') !== null) this.$router.push({\n      name: 'home'\n    });\n  },\n  data: function data() {\n    return {\n      user: this.createUser(),\n      errorEmail: false\n    };\n  },\n  components: {\n    InputField: InputField\n  },\n  computed: mapState({\n    customer: function customer(state) {\n      return state.customer;\n    },\n    customers: function customers(state) {\n      return state.customers;\n    }\n  }),\n  methods: {\n    createUser: function createUser() {\n      return {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNumber: ''\n      };\n    },\n    submit: function submit() {\n      console.log(this.customers);\n      //   for (let cus of this.customers) {\n      //     if (cus.email === this.user.email) this.errorEmail = true;\n      //     else this.errorEmail = false;\n      //   }\n      if (this.errorEmail === false) {\n        this.$store.dispatch('registerCustomer', this.user);\n        localStorage.setItem('email', this.customer.email);\n        this.$router.go(0);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","InputField","created","localStorage","getItem","$router","push","name","data","user","createUser","errorEmail","components","computed","customer","state","customers","methods","firstName","lastName","email","phoneNumber","submit","console","log","$store","dispatch","setItem","go"],"sources":["src/views/RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"image\">\r\n      <img\r\n        src=\"https://www.hcpc-uk.org/globalassets/image-library/icons/icon-register-800x600.gif\"\r\n      />\r\n    </div>\r\n    <div class=\"form-div\">\r\n      <form @submit.prevent=\"submit\">\r\n        <InputField\r\n          class=\"input\"\r\n          placeholder=\"First Name\"\r\n          @message=\"user.firstName = $event\"\r\n        ></InputField>\r\n        <InputField\r\n          class=\"input\"\r\n          placeholder=\"Last Name\"\r\n          @message=\"user.lastName = $event\"\r\n        ></InputField>\r\n        <InputField\r\n          class=\"input\"\r\n          placeholder=\"Email\"\r\n          @message=\"user.email = $event\"\r\n        ></InputField>\r\n        <small v-show=\"errorEmail\">This email is already used</small>\r\n        <InputField\r\n          class=\"input\"\r\n          placeholder=\"Phone Number\"\r\n          @message=\"user.phoneNumber = $event\"\r\n        ></InputField>\r\n        <input type=\"submit\" class=\"btn\" value=\"Register\" />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport InputField from '../components/InputField.vue';\r\nexport default {\r\n  created() {\r\n    if (localStorage.getItem('email') !== null)\r\n      this.$router.push({ name: 'home' });\r\n  },\r\n  data() {\r\n    return {\r\n      user: this.createUser(),\r\n      errorEmail: false,\r\n    };\r\n  },\r\n  components: {\r\n    InputField,\r\n  },\r\n  computed: mapState({\r\n    customer: (state) => state.customer,\r\n    customers: (state) => state.customers,\r\n  }),\r\n  methods: {\r\n    createUser() {\r\n      return {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n      };\r\n    },\r\n    submit() {\r\n      console.log(this.customers);\r\n      //   for (let cus of this.customers) {\r\n      //     if (cus.email === this.user.email) this.errorEmail = true;\r\n      //     else this.errorEmail = false;\r\n      //   }\r\n      if (this.errorEmail === false) {\r\n        this.$store.dispatch('registerCustomer', this.user);\r\n        localStorage.setItem('email', this.customer.email);\r\n        this.$router.go(0);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nsmall {\r\n  color: red;\r\n}\r\n.container {\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  padding: 20px;\r\n  /* background-color: aqua; */\r\n  /* height: 100vh; */\r\n  display: flex;\r\n}\r\n.image {\r\n  width: 50%;\r\n  height: 100%;\r\n}\r\nimg {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.form-div {\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 30px;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.input {\r\n  width: 100%;\r\n  max-width: 600px;\r\n}\r\n.btn {\r\n  align-self: center;\r\n  border: none;\r\n  background-color: #5d3fd3;\r\n  padding: 15px 20px;\r\n  color: white;\r\n  font-size: 20px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  opacity: 0.7;\r\n  width: 150px;\r\n}\r\n.btn:hover {\r\n  opacity: 1;\r\n}\r\n\r\n@media (max-width: 800px) {\r\n  .container {\r\n    flex-direction: column;\r\n  }\r\n  .image {\r\n    width: 100%;\r\n    height: 50%;\r\n  }\r\n  .form-div {\r\n    width: 100%;\r\n    height: 50%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAqCA,SAAAA,QAAA;AACA,OAAAC,UAAA;AACA;EACAC,OAAA,WAAAA,QAAA;IACA,IAAAC,YAAA,CAAAC,OAAA,oBACA,KAAAC,OAAA,CAAAC,IAAA;MAAAC,IAAA;IAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA,OAAAC,UAAA;MACAC,UAAA;IACA;EACA;EACAC,UAAA;IACAX,UAAA,EAAAA;EACA;EACAY,QAAA,EAAAb,QAAA;IACAc,QAAA,WAAAA,SAAAC,KAAA;MAAA,OAAAA,KAAA,CAAAD,QAAA;IAAA;IACAE,SAAA,WAAAA,UAAAD,KAAA;MAAA,OAAAA,KAAA,CAAAC,SAAA;IAAA;EACA;EACAC,OAAA;IACAP,UAAA,WAAAA,WAAA;MACA;QACAQ,SAAA;QACAC,QAAA;QACAC,KAAA;QACAC,WAAA;MACA;IACA;IACAC,MAAA,WAAAA,OAAA;MACAC,OAAA,CAAAC,GAAA,MAAAR,SAAA;MACA;MACA;MACA;MACA;MACA,SAAAL,UAAA;QACA,KAAAc,MAAA,CAAAC,QAAA,0BAAAjB,IAAA;QACAN,YAAA,CAAAwB,OAAA,eAAAb,QAAA,CAAAM,KAAA;QACA,KAAAf,OAAA,CAAAuB,EAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}